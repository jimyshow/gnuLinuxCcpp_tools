
find . -type f -exec du -h {} + | sort -rh | head -n 10
查找当前目录（及其子目录）下的所有文件，并对每个文件执行 du -h 来显示它的大小（以人类可读的形式）
| 部分                 | 含义                                                                                                                 |
| ------------------  | ---------------------------------------------------------------------------                                          |
| `find .`            | 从当前目录开始查找                                                                                                     |
| `-type f`           | 只查找类型为“文件”（file）的项目，不包括目录                                                                             |
| `-exec du -h {} +`  | 对查找到的每个文件执行 `du -h` 命令，其中 `{}` 代表每个匹配到的文件；`+` 表示尽可能多地将文件名作为参数一起传给 `du`（更高效） |

`{}` 代表每个匹配到的文件:
    在 find 命令中，-exec 是一个操作符，它的作用是：对每个匹配的文件或目录，执行指定的外部命令。
    {}是find的占位符(placeholder), 在-exec命令中，{}是一个特殊符号，表示: 当前匹配到的文件或目录的完整路径名。这像是一个“变量”或“占位符”，find会把它替换成匹配的实际路径。
+ 的作用是：
    尽可能多地将 find 找到的文件名作为参数，一次性传递给 du 命令执行，而不是对每个文件执行一次命令。这种方式更高效。
    eg: -exec CMD {} \;（分号方式）是传统写法，表示：每找到一个文件，就执行一次命令，把这个文件名替换 {}。
        find . -type f -exec du -h {} \; 
        等价于:
        du -h ./file1
        du -h ./file2
        du -h ./file3
        ...
        缺点: 效率低：每个 du 调用都要创建一个新进程，频繁调用系统资源。
    eg: find . -type f -exec du -h {} +, 可能等价于：du -h ./file1 ./file2 ./file3 ... , 效率高：多文件交给同一个du进程处理，减少了系统开销/进程创建成本

如果你只想看每个目录的总大小（不包含单独文件）： du -h --max-depth=1
