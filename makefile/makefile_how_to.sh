转载：https://blog.csdn.net/weixin_38391755/article/details/80380786（感谢整理）转载自：
http://blog.csdn.net/haoel/article/details/2886（感谢原创作者--haoel--陈皓MegaEase创始人--的创作）
1976年（个人推断）在云南出生。1998刚毕业成为云南省工商银行的一名技术员. https://www.cnblogs.com/moonfdd/p/17403371.html。
https://www.sohu.com/a/106437470_437992，作者：华创资本：2000年离开昆明，辞职后去上海，加入给银行做系统集成软件的南天公司，
2002年去北京，加入做分布式计算平台软件的公司-Platform，
2007年，陈皓加入了汤森路透，4年多时间从一名普通技术人员做到了部门主管，最多的时候他负责北京研发中心八个项目组的技术管理和产品研发工作
2010互联网复苏，得到亚马逊的机会，但职位和工资不是很好，而在汤森路透做则是风生水起，是公司重点培养的人，选择降薪降职去了亚马逊。
“卖书都能卖出全世界第一个推荐系统，第一个云平台，我必须要去看一下”，做到研发经理，负责电子商务全球化业务（全球开店）和全球库存预测系统的研发。后因团队被整体迁到美国，
2012年去了阿里做了聚石塔和阿里云。作者刘燕，cloud.tencent.com.cn/developer/article/2256174

1.
    把源文件编译成中间代码文件，在Windows下也就是 .obj 文件，UNIX下是 .o 文件，即 Object File，这个动作叫做编译（compile）。然后再把大量的Object File合成执行文件，这个动作叫作链接（link）。        
    编译时，编译器需要的是语法的正确，函数与变量的声明的正确。对于后者，通常是你需要告诉编译器头文件的所在位置（头文件中应该只是声明，而定义应该放在C/C++文件中），只要所有的语法正确，
编译器就可以编译出中间目标文件。一般来说，每个源文件都应该对应于一个中间目标文件（O文件或是OBJ文件）。 
    链接时，主要是链接函数和全局变量，所以，我们可以使用这些中间目标文件（O文件或是OBJ文件）来链接我们的应用程序。链接器并不管函数所在的源文件，只管函数的中间目标文件（Object File），
    在大多数时候，由于源文件太多，编译生成的中间目标文件太多，而在链接时需要明显地指出中间目标文件名，这对于编译很不方便，所以，我们要给中间目标文件打个包，在Windows下这种包叫“库文件”（Library File)，
也就是 .lib 文件，在UNIX下，是Archive File，也就是 .a 文件。  
    源文件首先会生成中间目标文件，再由中间目标文件生成执行文件

2.
 1.如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。
 2.如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序。
 3.如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的C文件，并链接目标程序。

3.
规则
target... : prerequisites ...
  command
...
...
target也就是一个目标文件，可以是Object File，也可以是执行文件。还可以是一个标签（Label），对于标签这种特性，在后续的“伪目标”章节中会有叙述。
prerequisites就是，要生成那个target所需要的文件或是目标。
command也就是make需要执行的命令。（任意的Shell命令）
这是一个文件的依赖关系，也就是说，target这一个或多个的目标文件依赖于prerequisites中的文件，其生成规则定义在command中。说白一点就是说，
prerequisites中如果有一个以上的文件比target文件要新的话，command所定义的命令就会被执行。这就是Makefile的规则。也就是Makefile中最核心的内容。

4.
$@--目标文件，$^--所有的依赖文件，$<--第一个依赖文件。

5.
